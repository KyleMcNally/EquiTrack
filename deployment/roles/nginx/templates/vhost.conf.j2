upstream django_{{ project.name }} {
{% if groups.get('appservers')|count > 1 and groups.get('appservers')[0] != inventory_hostname.get('ansible_eth0').get('ipv4').get('address') %}
  ip_hash;
{% for host in groups['appservers'] %}
    server                  {{ host }}:8000 max_fails=3  fail_timeout=15s;
{% endfor %}
{% else %}
    server                  127.0.0.1:8000;
{% endif %}
}

server {

    listen                  80;
    listen                  443 ssl;

    charset                 utf-8;
    server_tokens           off;

    server_name             {% for name in nginx.servernames %}{{name}} {%endfor%};

    ssl_certificate         /etc/nginx/ssl/{{ project.name }}-cert.pem;
    ssl_certificate_key     /etc/nginx/ssl/{{ project.name }}-private-key.pem;


    access_log              /var/log/nginx/{{ project.name }}.access.log;
    error_log               /var/log/nginx/{{ project.name }}.error.log;

    expires modified        -1d;

    rewrite                 ^/(.*)/favicon.ico$ /favicon.ico last;

    location / {
        # serve static files from defined root folder;.
        # @{{project.name}} is a named location for the upstream fallback, see below
        try_files $uri $uri/index.html $uri.html @{{project.name}};
    }

    location /static/sass/ {
        deny                all;
        return              404;
    }
    location /static/(*.rb|*) {
        deny                all;
        return              404;
    }

    location @{{ project.name }} {
        proxy_read_timeout          300;
        proxy_connect_timeout       300;
        proxy_redirect              off;

        proxy_set_header            X-Forwarded-Proto $scheme;
        proxy_set_header            Host              $http_host;
        proxy_set_header            X-Real-IP         $remote_addr;

        uwsgi_pass                  django_{{ project.name }};
        include                     /etc/nginx/uwsgi_params;
    }

}

