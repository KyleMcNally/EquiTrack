- name: ensure postgres is installed
  action: apt pkg={{item}} state=installed update-cache=yes
  sudo: yes
  with_items:
    - postgresql-9.1-postgis
    - postgresql-server-dev-9.1
    - libgeos-dev
    - python-psycopg2

- name: start postgres server for the next steps
  sudo: yes
  command: service postgresql start

- name: Create postgresql user
  action: postgresql_user user={{dbuser}} password={{dbpassword}} role_attr_flags=CREATEDB,NOSUPERUSER
  sudo_user: postgres
  sudo: yes

- name: ensure database is created
  action: postgresql_db db={{dbname}} owner={{dbuser}}
  sudo_user: postgres
  sudo: yes
  register: db_created

- name: create postgis extension
  action: command psql -c "CREATE EXTENSION postgis;" --dbname={{dbname}}
  sudo: yes
  sudo_user: postgres
  when: db_created.changed

- name: create postgis_topology extension
  action: command psql -c "CREATE EXTENSION postgis_topology;" --dbname={{dbname}}
  sudo: yes
  sudo_user: postgres
  when: db_created.changed

- name: ensure user has access to database
  sudo: yes
  sudo_user: postgres
  action: postgresql_user db={{dbname}} user={{dbuser}} password={{dbpassword}} priv=ALL

- name: ensure user does not have unnecessary privilege
  sudo: yes
  sudo_user: postgres
  action: postgresql_user user={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB

- name: load exisitng data if it exists
  sudo: yes
  sudo_user: postgres
  command: pg_restore --verbose --clean --no-acl --no-owner -h localhost -d {{dbname}} -U {{dbuser}} -W {{dbpassword}} latest.dump