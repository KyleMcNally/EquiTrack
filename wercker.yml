box: wercker/python
services:
  - mies/postgis@0.0.5

# Build definition
build:
  # The steps that will be executed on build
  steps:

    - script:
        name: set postgis connection string
        code: |
          export WERCKER_POSTGRESQL_URL="postgis://$WERCKER_POSTGRESQL_USERNAME:$WERCKER_POSTGRESQL_PASSWORD@$WERCKER_POSTGRESQL_HOST:$WERCKER_POSTGRESQL_PORT/$WERCKER_POSTGRESQL_DATABASE"

    - install-packages:
        packages: postgresql-client-9.3 postgis libgdal-dev

    # A step that sets up the python virtual environment
    - virtualenv:
         name: setup virtual environment

    # A step that executes `pip install` command.
    - pip-install:
         requirements_file: "requirements/test.txt"

    # # This pip-install clears the local wheel cache
    # - pip-install:
    #     clean_wheel_dir: true

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo python information
        code: |
          echo "python version $(python --version) running"
          echo "pip version $(pip --version) running"

    - script:
        name: set django settings file
        code: export DJANGO_SETTINGS_MODULE="EquiTrack.settings.test"

    - script:
        name: run django tests
        code: |
          python ./EquiTrack/manage.py test

deploy:
  steps:
    - add-to-known_hosts:
        hostname: $SERVER_HOSTNAME
    - add-ssh-key:
        keyname: DOKKU
    - script:
        name: Initialize new repository
        code: |
          rm -rf .git
          git init
          git config --global user.name "wercker"
          git config --global user.email "pleasemailus@wercker.com"
          git remote add dokku dokku@$SERVER_HOSTNAME:getting-started-nodejs
    - script:
        name: Add everything to the repository
        code: |
          git add .
          git commit -m "Result of deploy $WERCKER_GIT_COMMIT"
    - script:
        name: Push to dokku
        code: |
          git push dokku master